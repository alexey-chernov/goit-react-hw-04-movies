{"version":3,"sources":["views/MovieDetailsPage/MovieDetailsPage.module.css","views/MovieDetailsPage/MovieDetailsPage.js"],"names":["module","exports","CastView","lazy","ReviewsView","HomeSubView","useRouteMatch","url","path","moviesId","useParams","location","useLocation","history","useHistory","useState","movie","setMovie","error","setError","useEffect","moviesAPI","then","data","catch","console","log","type","className","styles","button","onClick","push","state","from","movies","src","poster_path","noImageAvailable","alt","title","width","about","vote_average","overview","description","genres","genre","map","name","id","navigation","information","to","pathname","link","activeClassName","activeLink","fallback"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,OAAS,iCAAiC,MAAQ,gCAAgC,SAAW,mCAAmC,YAAc,sCAAsC,OAAS,iCAAiC,WAAa,qCAAqC,WAAa,qCAAqC,YAAc,sCAAsC,KAAO,+BAA+B,WAAa,kEAAkE,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,iKCejlBC,EAAWC,gBAAK,kBACpB,gCAGIC,EAAcD,gBAAK,kBACvB,gCAGa,SAASE,IACtB,MAAsBC,cAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KACLC,EAAaC,cAAbD,SACFE,EAAWC,cACXC,EAAUC,cAChB,EAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,IACiBZ,GAEda,MAAK,SAAAC,GACJN,EAASM,MAEVC,OAAM,SAAAN,GACLO,QAAQC,IAAIR,GACZC,EAAS,yCAEZ,CAACV,EAAUS,IAMd,OACE,mCACGF,GACC,qCACE,wBAAQW,KAAK,SAASC,UAAWC,IAAOC,OAAQC,QARvC,WAAO,IAAD,MACrBlB,EAAQmB,KAAR,iBAAarB,QAAb,IAAaA,GAAb,UAAaA,EAAUsB,aAAvB,iBAAa,EAAiBC,YAA9B,aAAa,EAAuBvB,gBAApC,QAAgD,YAO1C,qBAGA,sBAAKiB,UAAWC,IAAOM,OAAvB,UACE,qBACEC,IACEpB,EAAMqB,YAAN,0CACuCrB,EAAMqB,aACzCC,IAENC,IAAKvB,EAAMwB,MACXC,MAAM,QAER,sBAAKb,UAAWC,IAAOa,MAAvB,UACE,qBAAId,UAAWC,IAAOW,MAAtB,UAA8BxB,EAAMwB,MAApC,OACA,6CAAqC,GAArBxB,EAAM2B,aAAtB,OACA,oBAAGf,UAAWC,IAAOe,SAArB,qBAEE,sBAAMhB,UAAWC,IAAOgB,YAAxB,SAAsC7B,EAAM4B,cAE7C5B,EAAM8B,QACL,qCACE,oBAAIlB,UAAWC,IAAOW,MAAtB,oBACA,oBAAIZ,UAAWC,IAAOkB,MAAtB,SACG/B,EAAM8B,OAAOE,KAAI,SAAAD,GAAK,OACrB,6BAAoBA,EAAME,MAAjBF,EAAMG,kBAQ3B,sBAAKtB,UAAWC,IAAOsB,WAAvB,UACE,mBAAGvB,UAAWC,IAAOuB,YAArB,oCAEA,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAK/C,EAAL,SACR0B,MAAO,CAAEC,KAAM,CAAEvB,cAEnBiB,UAAWC,IAAO0B,KAClBC,gBAAiB3B,IAAO4B,WAN1B,kBAWA,cAAC,IAAD,CACEJ,GAAI,CACFC,SAAS,GAAD,OAAK/C,EAAL,YACR0B,MAAO,CAAEC,KAAM,CAAEvB,cAEnBiB,UAAWC,IAAO0B,KAClBC,gBAAiB3B,IAAO4B,WAN1B,wBAYF,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOlD,KAAI,UAAKA,EAAL,kBAAX,SACE,cAACN,EAAD,CAAUO,SAAUA,MAGtB,cAAC,IAAD,CAAOD,KAAI,UAAKA,EAAL,qBAAX,SACE,cAACJ,EAAD,CAAaK,SAAUA","file":"static/js/movie-sub-view.02220451.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies\":\"MovieDetailsPage_movies__1FrVE\",\"about\":\"MovieDetailsPage_about__323jL\",\"overview\":\"MovieDetailsPage_overview__2XEaf\",\"description\":\"MovieDetailsPage_description__2XI5s\",\"genres\":\"MovieDetailsPage_genres__2TnoP\",\"genresName\":\"MovieDetailsPage_genresName__10DZ9\",\"navigation\":\"MovieDetailsPage_navigation__1Zmi2\",\"information\":\"MovieDetailsPage_information__1ZSIy\",\"link\":\"MovieDetailsPage_link__bjx_3\",\"activeLink\":\"MovieDetailsPage_activeLink__2Dj_x MovieDetailsPage_link__bjx_3\",\"button\":\"MovieDetailsPage_button__2yIpR\",\"title\":\"MovieDetailsPage_title__VrDbs\",\"genre\":\"MovieDetailsPage_genre__3pSpl\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  NavLink,\n  useRouteMatch,\n  Route,\n  Switch,\n  useLocation,\n  useHistory,\n} from 'react-router-dom';\n\nimport * as moviesAPI from '../../services/fetchApi';\nimport noImageAvailable from '../../images/Noimage.svg.png';\nimport LoaderComponent from '../../components/Loader';\nimport styles from './MovieDetailsPage.module.css';\n\nconst CastView = lazy(() =>\n  import('../Cast' /* webpackChunkName: \"cast-view\" */),\n);\n\nconst ReviewsView = lazy(() =>\n  import('../Reviews' /* webpackChunkName: \"review-view\" */),\n);\n\nexport default function HomeSubView() {\n  const { url, path } = useRouteMatch();\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    moviesAPI\n      .getMoviesById(moviesId)\n\n      .then(data => {\n        setMovie(data);\n      })\n      .catch(error => {\n        console.log(error);\n        setError('Something went wrong. Try again.');\n      });\n  }, [moviesId, error]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from?.location ?? '/movies');\n  };\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button type=\"button\" className={styles.button} onClick={onGoBack}>\n            Go back\n          </button>\n          <div className={styles.movies}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : noImageAvailable\n              }\n              alt={movie.title}\n              width=\"250\"\n            />\n            <div className={styles.about}>\n              <h1 className={styles.title}>{movie.title} </h1>\n              <p>User Score: {movie.vote_average * 10}%</p>\n              <p className={styles.overview}>\n                Overview\n                <span className={styles.description}>{movie.overview}</span>\n              </p>\n              {movie.genres && (\n                <>\n                  <h3 className={styles.title}>Genres</h3>\n                  <ul className={styles.genre}>\n                    {movie.genres.map(genre => (\n                      <li key={genre.id}>{genre.name}</li>\n                    ))}\n                  </ul>\n                </>\n              )}\n            </div>\n          </div>\n\n          <nav className={styles.navigation}>\n            <p className={styles.information}>Additional information</p>\n\n            <NavLink\n              to={{\n                pathname: `${url}/cast`,\n                state: { from: { location } },\n              }}\n              className={styles.link}\n              activeClassName={styles.activeLink}\n            >\n              Cast\n            </NavLink>\n\n            <NavLink\n              to={{\n                pathname: `${url}/reviews`,\n                state: { from: { location } },\n              }}\n              className={styles.link}\n              activeClassName={styles.activeLink}\n            >\n              Reviews\n            </NavLink>\n          </nav>\n\n          <Suspense fallback={<LoaderComponent />}>\n            <Switch>\n              <Route path={`${path}:moviesId/cast`}>\n                <CastView moviesId={moviesId} />\n              </Route>\n\n              <Route path={`${path}:moviesId/reviews`}>\n                <ReviewsView moviesId={moviesId} />\n              </Route>\n            </Switch>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}