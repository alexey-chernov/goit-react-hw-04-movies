{"version":3,"sources":["components/SearchFilms/SearchFilms.module.css","views/MoviesPage/MoviesPage.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/SearchFilms/SearchFilms.js","views/MoviesPage/MoviesPage.js"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","SearchBar","onSubmit","useState","name","setName","event","preventDefault","trim","toast","info","className","styles","form","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","input","button","MoviesView","history","useHistory","location","useLocation","movies","setMovies","url","useRouteMatch","error","setError","searchQuery","URLSearchParams","search","get","useEffect","moviesAPI","then","data","results","catch","console","log","query","trendItem","map","movie","trendMovie","to","pathname","id","state","from","trendLink","src","poster_path","noImageAvailable","alt","title","width","imageTrend"],"mappings":"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","file":"static/js/movies-view.ff24f422.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchFilms_form__3T2xW\",\"input\":\"SearchFilms_input__22wn5\",\"button\":\"SearchFilms_button__19Ied\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trendItem\":\"MoviesPage_trendItem__1N0oj\",\"trendMovie\":\"MoviesPage_trendMovie__4diU_\",\"title\":\"MoviesPage_title__3XGuo\",\"imageTrend\":\"MoviesPage_imageTrend__22ETk\",\"trendLink\":\"MoviesPage_trendLink__1SwuJ\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport styles from './SearchFilms.module.css';\n\nexport default function SearchBar({ onSubmit }) {\n  const [name, setName] = useState('');\n\n  const handleChange = event => {\n    setName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name.trim() === '') {\n      toast.info('Please enter your query!');\n      return;\n    }\n\n    onSubmit(name);\n    setName('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <input\n        type=\"text\"\n        value={name}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Enter movie name\"\n        onChange={handleChange}\n        className={styles.input}\n      />\n      <button type=\"submit\" className={styles.button}>\n        Search\n      </button>\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport {\n  useHistory,\n  useLocation,\n  NavLink,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport SearchBar from '../../components/SearchFilms';\nimport * as moviesAPI from '../../services/fetchApi';\nimport noImageAvailable from '../../images/Noimage.svg.png';\nimport styles from './MoviesPage.module.css';\n\nexport default function MoviesView() {\n  const history = useHistory();\n  const location = useLocation();\n  const [movies, setMovies] = useState(null);\n  const { url } = useRouteMatch();\n  const [error, setError] = useState();\n\n  const searchQuery = new URLSearchParams(location.search).get('query') ?? '';\n\n  const onChangeSearchQuery = query => {\n    history.push({ ...location, search: `query=${query}` });\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    moviesAPI\n      .getSearchMovie(searchQuery)\n      .then(data => {\n        if (data.results.length !== 0) {\n          // toast.success('Requested movie(s) has been successfully found!');\n          setMovies(data.results);\n        }\n\n        if (data.results.length === 0) {\n          toast.error(`There are no movies on your request \"${searchQuery}!\"`);\n          setMovies([]);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        setError('Something went wrong. Try again.');\n      });\n  }, [searchQuery, error]);\n\n  return (\n    <>\n      <SearchBar onSubmit={onChangeSearchQuery} />\n\n      {movies && (\n        <ul className={styles.trendItem}>\n          {movies.map(movie => (\n            <li key={movie.id} className={styles.trendMovie}>\n              <NavLink\n                to={{\n                  pathname: `${url}/${movie.id}`,\n                  state: { from: { location } },\n                }}\n                className={styles.trendLink}\n              >\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : noImageAvailable\n                  }\n                  alt={movie.title}\n                  width=\"320\"\n                  className={styles.imageTrend}\n                />\n\n                <p className={styles.title}>{movie.title}</p>\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}